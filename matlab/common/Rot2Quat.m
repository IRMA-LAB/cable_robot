function q = Rot2Quat(R)

  q_square(1) = 0.25 * (1 + R(1,1) + R(2,2) + R(3,3));
  q_square(2) = 0.25 * (1 + R(1,1) - R(2,2) - R(3,3));
  q_square(3) = 0.25 * (1 - R(1,1) + R(2,2) - R(3,3));
  q_square(4) = 0.25 * (1 - R(1,1) - R(2,2) + R(3,3));
  [~,i] = max(q_square);
  switch (i) 
    case 1
      q(1,1) = sqrt(q_square(1));
      q(2,1) = 0.25 * (R(3,2) - R(2,3)) / q(1);
      q(3,1) = 0.25 * (R(1,3) - R(3,1)) / q(1);
      q(4,1) = 0.25 * (R(2,1) - R(1,2)) / q(1);
    case 2
      q(2,1) = sqrt(q_square(2));
      q(1,1) = 0.25 * (R(3,2) - R(2,3)) / q(2);
      q(3,1) = 0.25 * (R(1,3) - R(3,1)) / q(1);
      q(4,1) = 0.25 * (R(2,1) - R(1,2)) / q(1);
    case 3
      q(3,1) = sqrt(q_square(3));
      q(1,1) = 0.25 * (R(1,3) - R(3,1)) / q(3);
      q(2,1) = 0.25 * (R(3,2) - R(2,3)) / q(1);
      q(4,1) = 0.25 * (R(2,1) - R(1,2)) / q(1);
    case 4
      q(4,1) = sqrt(q_square(4));
      q(1,1) = 0.25 * (R(2,1) - R(1,2)) / q(4);
      q(2,1) = 0.25 * (R(3,2) - R(2,3)) / q(1);
      q(3,1) = 0.25 * (R(1,3) - R(3,1)) / q(1);
  end    
end